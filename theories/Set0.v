Require Import Bool.
From BF Require Import Base Byte MIR.

Fixpoint mod_inverse_rec (x : nat) (i : nat) : option nat :=
  match i with
  | S i' =>
      let y := 128 - i in
      if (x * y mod 256 =? 1) || (x * y mod 256 =? 255)
      then Some y
      else mod_inverse_rec x i'
  | O => None
  end%nat.
Definition mod_inverse (x : nat) : option nat := mod_inverse_rec x 127.

Local Ltac exists_inverse_1 x y :=
  destruct x; [discriminate | destruct x; [exists y; left; reflexivity |]].
Local Ltac exists_inverse_255 x y :=
  destruct x; [discriminate | destruct x; [exists y; right; reflexivity |]].

Theorem nat_odd_has_inverse : forall x,
  x < 256 ->
  Nat.odd x = true ->
  exists y, x * y mod 256 = 1 \/ x * y mod 256 = 255.
Proof.
  intros.
  exists_inverse_1 x 1. (* 1 *)
  exists_inverse_255 x 85. (* 3 *)
  exists_inverse_255 x 51. (* 5 *)
  exists_inverse_255 x 73. (* 7 *)
  exists_inverse_1 x 57. (* 9 *)
  exists_inverse_255 x 93. (* 11 *)
  exists_inverse_255 x 59. (* 13 *)
  exists_inverse_255 x 17. (* 15 *)
  exists_inverse_255 x 15. (* 17 *)
  exists_inverse_1 x 27. (* 19 *)
  exists_inverse_1 x 61. (* 21 *)
  exists_inverse_255 x 89. (* 23 *)
  exists_inverse_1 x 41. (* 25 *)
  exists_inverse_1 x 19. (* 27 *)
  exists_inverse_1 x 53. (* 29 *)
  exists_inverse_255 x 33. (* 31 *)
  exists_inverse_255 x 31. (* 33 *)
  exists_inverse_255 x 117. (* 35 *)
  exists_inverse_255 x 83. (* 37 *)
  exists_inverse_255 x 105. (* 39 *)
  exists_inverse_1 x 25. (* 41 *)
  exists_inverse_255 x 125. (* 43 *)
  exists_inverse_255 x 91. (* 45 *)
  exists_inverse_255 x 49. (* 47 *)
  exists_inverse_255 x 47. (* 49 *)
  exists_inverse_255 x 5. (* 51 *)
  exists_inverse_1 x 29. (* 53 *)
  exists_inverse_255 x 121. (* 55 *)
  exists_inverse_1 x 9. (* 57 *)
  exists_inverse_255 x 13. (* 59 *)
  exists_inverse_1 x 21. (* 61 *)
  exists_inverse_255 x 65. (* 63 *)
  exists_inverse_255 x 63. (* 65 *)
  exists_inverse_1 x 107. (* 67 *)
  exists_inverse_255 x 115. (* 69 *)
  exists_inverse_1 x 119. (* 71 *)
  exists_inverse_255 x 7. (* 73 *)
  exists_inverse_1 x 99. (* 75 *)
  exists_inverse_255 x 123. (* 77 *)
  exists_inverse_255 x 81. (* 79 *)
  exists_inverse_255 x 79. (* 81 *)
  exists_inverse_255 x 37. (* 83 *)
  exists_inverse_255 x 3. (* 85 *)
  exists_inverse_1 x 103. (* 87 *)
  exists_inverse_255 x 23. (* 89 *)
  exists_inverse_255 x 45. (* 91 *)
  exists_inverse_255 x 11. (* 93 *)
  exists_inverse_255 x 97. (* 95 *)
  exists_inverse_255 x 95. (* 97 *)
  exists_inverse_1 x 75. (* 99 *)
  exists_inverse_1 x 109. (* 101 *)
  exists_inverse_1 x 87. (* 103 *)
  exists_inverse_255 x 39. (* 105 *)
  exists_inverse_1 x 67. (* 107 *)
  exists_inverse_1 x 101. (* 109 *)
  exists_inverse_255 x 113. (* 111 *)
  exists_inverse_255 x 111. (* 113 *)
  exists_inverse_255 x 69. (* 115 *)
  exists_inverse_255 x 35. (* 117 *)
  exists_inverse_1 x 71. (* 119 *)
  exists_inverse_255 x 55. (* 121 *)
  exists_inverse_255 x 77. (* 123 *)
  exists_inverse_255 x 43. (* 125 *)
  exists_inverse_1 x 127. (* 127 *)
  exists_inverse_255 x 127. (* 129 *)
  exists_inverse_1 x 43. (* 131 *)
  exists_inverse_1 x 77. (* 133 *)
  exists_inverse_1 x 55. (* 135 *)
  exists_inverse_255 x 71. (* 137 *)
  exists_inverse_1 x 35. (* 139 *)
  exists_inverse_1 x 69. (* 141 *)
  exists_inverse_1 x 111. (* 143 *)
  exists_inverse_1 x 113. (* 145 *)
  exists_inverse_255 x 101. (* 147 *)
  exists_inverse_255 x 67. (* 149 *)
  exists_inverse_1 x 39. (* 151 *)
  exists_inverse_255 x 87. (* 153 *)
  exists_inverse_255 x 109. (* 155 *)
  exists_inverse_255 x 75. (* 157 *)
  exists_inverse_1 x 95. (* 159 *)
  exists_inverse_1 x 97. (* 161 *)
  exists_inverse_1 x 11. (* 163 *)
  exists_inverse_1 x 45. (* 165 *)
  exists_inverse_1 x 23. (* 167 *)
  exists_inverse_255 x 103. (* 169 *)
  exists_inverse_1 x 3. (* 171 *)
  exists_inverse_1 x 37. (* 173 *)
  exists_inverse_1 x 79. (* 175 *)
  exists_inverse_1 x 81. (* 177 *)
  exists_inverse_1 x 123. (* 179 *)
  exists_inverse_255 x 99. (* 181 *)
  exists_inverse_1 x 7. (* 183 *)
  exists_inverse_255 x 119. (* 185 *)
  exists_inverse_1 x 115. (* 187 *)
  exists_inverse_255 x 107. (* 189 *)
  exists_inverse_1 x 63. (* 191 *)
  exists_inverse_1 x 65. (* 193 *)
  exists_inverse_255 x 21. (* 195 *)
  exists_inverse_1 x 13. (* 197 *)
  exists_inverse_255 x 9. (* 199 *)
  exists_inverse_1 x 121. (* 201 *)
  exists_inverse_255 x 29. (* 203 *)
  exists_inverse_1 x 5. (* 205 *)
  exists_inverse_1 x 47. (* 207 *)
  exists_inverse_1 x 49. (* 209 *)
  exists_inverse_1 x 91. (* 211 *)
  exists_inverse_1 x 125. (* 213 *)
  exists_inverse_255 x 25. (* 215 *)
  exists_inverse_1 x 105. (* 217 *)
  exists_inverse_1 x 83. (* 219 *)
  exists_inverse_1 x 117. (* 221 *)
  exists_inverse_1 x 31. (* 223 *)
  exists_inverse_1 x 33. (* 225 *)
  exists_inverse_255 x 53. (* 227 *)
  exists_inverse_255 x 19. (* 229 *)
  exists_inverse_255 x 41. (* 231 *)
  exists_inverse_1 x 89. (* 233 *)
  exists_inverse_255 x 61. (* 235 *)
  exists_inverse_255 x 27. (* 237 *)
  exists_inverse_1 x 15. (* 239 *)
  exists_inverse_1 x 17. (* 241 *)
  exists_inverse_1 x 59. (* 243 *)
  exists_inverse_1 x 93. (* 245 *)
  exists_inverse_255 x 57. (* 247 *)
  exists_inverse_1 x 73. (* 249 *)
  exists_inverse_1 x 51. (* 251 *)
  exists_inverse_1 x 85. (* 253 *)
  exists_inverse_255 x 1. (* 255 *)
  intuition.
Qed.
